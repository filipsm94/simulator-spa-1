/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.udistrital.estudiantes.simulatorspa;

import java.awt.Color;
import java.awt.Graphics;

/**
 *
 * @author jhogarcia
 */
public class NewJFrame extends javax.swing.JFrame {

 
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        setSize( 800, 800 );
        setVisible( true );
    }

    
   
    
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        
        pintarBase(g);
        
   
//      paintComponents(g);
 
    }

    @Override
    public void paintComponents(Graphics g) {
        super.paintComponents(g); //To change body of generated methods, choose Tools | Templates.
     
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
     public void pintarBase(Graphics g){
        g.setColor( Color.BLACK );
        
        //MAR
        g.drawString( "MAR", 40, 60 );
        g.drawRect( 40, 60, 120, 60 );
        //OUT MAR
        g.drawLine( 160, 80, 260, 80 );
        //IN MAR
        g.drawLine( 160, 100, 260, 100 );
        
        //RAM
        g.drawString( "RAM", 40, 140 );
        g.drawRect( 40, 140, 120, 60 );
        //OUT RAM
        g.drawLine( 160, 160, 260, 160 );
        //IN MAR
        g.drawLine( 160, 180, 260, 180 );
        
        //PC
        g.drawString( "PC", 40, 220 );
        g.drawRect( 40, 220, 120, 60 );
        //OUT PC
        g.drawLine( 160, 240, 260, 240 );
        //IN PC
        g.drawLine( 160, 260, 260, 260 );
        
        //RI
        g.drawString( "REG. INST.", 40, 300 );
        g.drawRect( 40, 300, 120, 60 );
        //OUT RI
        g.drawLine( 160, 320, 260, 320 );
        //IN RI
        g.drawLine( 160, 340, 260, 340 );
        
        //CS
        g.drawString( "PC", 40, 380 );
        g.drawRect( 40, 380, 120, 60 );
        //OUT CS
        g.drawLine( 160, 400, 260, 400 );
        //IN CS
        g.drawLine( 160, 420, 260, 420 );
        
        //BUS
        g.drawRect( 260, 60, 20, 380 );
        
        //A
        g.drawString( "A", 380, 60 );
        g.drawRect(380, 60, 120, 60 );
        //OUT A
        g.drawLine( 280, 80, 380, 80 );
        //IN A
        g.drawLine( 280, 100, 380, 100 );
        
        //ALU
        g.drawString( "ALU", 380, 140 );
        g.drawRect( 380, 140, 120, 60 );
        //OUT ALU
        g.drawLine( 280, 160, 380, 160 );
        //IN ALU
        g.drawLine( 280, 180, 380, 180 );
        
        //B
        g.drawString( "B", 380, 220 );
        g.drawRect( 380, 220, 120, 60 );
        //OUT B
        g.drawLine( 280, 240, 380, 240 );
        //IN B
        g.drawLine( 280, 260, 380, 260 );
        
        //RS
        g.drawString( "RS", 380, 300 );
        g.drawRect( 380, 300, 120, 60 );
        //OUT RS
        g.drawLine( 280, 320, 380, 320 );
        //IN RS
        g.drawLine( 280, 340, 380, 340 );
        
        //DISPLAY
        g.drawString( "DISPLAY", 380, 380);
        g.drawRect( 380, 380, 120, 60 );
        //OUT DISPLAY
        g.drawLine( 280, 400, 380, 400 );
        //IN DISPLAY
        g.drawLine( 280, 420, 380, 420 );
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
